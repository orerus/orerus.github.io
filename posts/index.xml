<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Orerus blog</title><link>https://orerus.github.io/posts/</link><description>Recent content in Posts on Orerus blog</description><generator>Hugo -- gohugo.io</generator><language>ja-JA</language><lastBuildDate>Tue, 21 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://orerus.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>flutterでbuildを繰り返していると「File name too long」と出る問題</title><link>https://orerus.github.io/posts/20230321_1/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>https://orerus.github.io/posts/20230321_1/</guid><description>flutterでAndroidアプリを繰り返しrunしていると突然コケることがある こんな感じで、突如 File name too long を吐き出して以降コケ続けることが</description><content>&lt;h2 id="flutterでandroidアプリを繰り返しrunしていると突然コケることがある">flutterでAndroidアプリを繰り返しrunしていると突然コケることがある&lt;/h2>
&lt;p>こんな感じで、突如 &lt;code>File name too long&lt;/code> を吐き出して以降コケ続けることがあります。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">* What went wrong:
Execution failed for task &amp;#39;:app:copyFlutterAssetsLocalDebug&amp;#39;.
&amp;gt; Could not copy file &amp;#39;/hoge/fuga/…/android/app/build/intermediates/flutter/{variant}/flutter_assets/android/app/build/intermediates/merged_assets/{variant}/out/flutter_assets/android/app/build/intermediates/merged_assets/…/piyo&amp;#39; to &amp;#39;/hoge/fuga/…/android/app/build/intermediates/flutter/{variant}/flutter_assets/android/app/build/intermediates/merged_assets/{variant}/out/flutter_assets/android/app/build/intermediates/merged_assets/…/piyo&amp;#39;.
&amp;gt; /hoge/fuga/…/android/app/build/intermediates/flutter/{variant}/flutter_assets/android/app/build/intermediates/merged_assets/{variant}/out/flutter_assets/android/app/build/intermediates/merged_assets/…/piyo (File name too long)
* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
* Get more help at https://help.gradle.org
BUILD FAILED in 1m 48s
Exception: Gradle task assembleLocalDebug failed with exit code 1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>手元の環境では &lt;a href="https://chromium.googlesource.com/external/github.com/flutter/flutter/+/refs/tags/v1.12.10/packages/flutter_tools/gradle/flutter.gradle#652">gradle の copyFlutterAssetsTask&lt;/a> のタイミングでコケていました。&lt;/p>
&lt;h2 id="原因">原因&lt;/h2>
&lt;p>よくわかりません🙏&lt;br>
ただ、下記ツイートにあるようにbuild回数を重ねる事にbuildディレクトリが深くなっていっているので、buildの都度ディレクトリが掘られる -&amp;gt; file name too long の流れっぽいことは確かだと思われます。&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">cache削除してやり直した1回目と2回目の結果がこちら。flutter_assets/android 配下がループしてるっぽいけど原因を追う気力が出ぬ &lt;a href="https://t.co/VgVHhMJ7dL">pic.twitter.com/VgVHhMJ7dL&lt;/a>&lt;/p>&amp;mdash; スク (@orerus) &lt;a href="https://twitter.com/orerus/status/1637115808890621952?ref_src=twsrc%5Etfw">March 18, 2023&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;h2 id="とりあえずの対応策">とりあえずの対応策&lt;/h2>
&lt;p>根本原因は分からないので場当たり的な方法になりますが、手っ取り早くやるなら下記コマンドでbuildディレクトリを削除して再度runすればOK。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">rm -rf android/app/build
&lt;/code>&lt;/pre>&lt;/div>&lt;p>自分は都度コマンドを叩くのが面倒だった為、AndroidStudioの機能を使って以下のようなシェルスクリプトをbuildの前に実行するようにして凌いでいます。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;android/app/build/intermediates/flutter/{variant}/flutter_assets/android&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
rm -rf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">fi&lt;/span>
DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;android/app/build/intermediates/merged_assets/{variant}/out/flutter_assets/android&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
rm -rf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>※{variant}の部分は各自の環境に読み替えてください&lt;br>
※とりあえず上の２つのディレクトリを消しておけば大丈夫そうでした&lt;/p>
&lt;p>一応AndroidStudioの設定手順も&lt;/p>
&lt;table>
&lt;tr>
&lt;td>
&lt;img src="https://orerus.github.io/img/20230321_1/remove_build_1.png" alt="step1" class="center" style="border-radius: 8px;" />
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;img src="https://orerus.github.io/img/20230321_1/remove_build_2.png" alt="step2" class="center" style="border-radius: 8px;" />
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;img src="https://orerus.github.io/img/20230321_1/remove_build_3.png" alt="step3" class="center" style="border-radius: 8px;" />
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;h2 id="さいごに">さいごに&lt;/h2>
&lt;p>もし根本原因＆解決策がお分かりの方いらっしゃいましたら是非&lt;a href="https://twitter.com/orerus/status/1637114770691346434?s=20">Twitter&lt;/a>の方にDMかリプください🙇‍♂‍&lt;/p></content></item><item><title>開発をお手伝いさせていただいたプロットマッピングカメラアプリ「CALINT」がリリースされました</title><link>https://orerus.github.io/posts/introduce_calint/</link><pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate><guid>https://orerus.github.io/posts/introduce_calint/</guid><description>CALINTとは CALINT（カリント）とは、株式会社moegiよりリリースされた、いわゆるプロットマッピングカメラアプリです。 ※現在はiO</description><content>&lt;h2 id="calintとは">CALINTとは&lt;/h2>
&lt;p>CALINT（カリント）とは、株式会社moegiよりリリースされた、いわゆるプロットマッピングカメラアプリです。&lt;br>
※現在はiOSのみリリース済み&lt;/p>
&lt;p>カメラで撮影を行いながら、同時に地図や速度、カメラの向きや標高などを記録できます。&lt;br>
具体的には、mp4、csv、gpxファイルを同時に記録できるアプリになります。&lt;/p>
&lt;p>詳しくは、以下の公式サイト、および使用イメージを是非ご覧ください！&lt;/p>
&lt;p>公式サイト: &lt;a href="https://moegi.jp/calint/">CALINT&lt;/a>&lt;/p>
&lt;h2 id="使用イメージ">使用イメージ&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/jFGsV8vfEAc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="CALINT 紹介動画">&lt;/iframe>
&lt;/div>
&lt;p>こちらの動画を見ていただければおおよそのアプリのイメージが掴んでいただけるかと思います！&lt;br>
ハイキングやドライブ、電車内・飛行機内からの撮影等、様々なシーンでご利用いただけるかと(^^)&lt;/p>
&lt;h2 id="開発時の話">開発時の話&lt;/h2>
&lt;p>諸事情により内部の作りの詳細についてはあまり記述できませんが、せっかくなので開発時の苦労話等を少しご紹介します&lt;/p>
&lt;h3 id="アーキテクチャについて">アーキテクチャについて&lt;/h3>
&lt;p>今回は&lt;a href="https://github.com/ReactorKit/ReactorKit">ReactorKit&lt;/a>を用いたFluxアーキテクチャを採用しました。&lt;/p>
&lt;p>理由としては、アプリの特性上、様々なトリガー（ユーザーのタップや、GPSのコールバック、ファイル保存時のコールバック等）で処理が走る為、トリガーに関わらず処理のフローを一方向に限定し、各処理の記述位置を明確にしてコードをシンプルにし、バグを減らしたかった為です。&lt;br>
（ただでさえ録画周りで原因不明なクラッシュが発生しやすい・・・）&lt;/p>
&lt;p>また、非同期での処理を前提とした構成にすることで、様々なトリガーによって処理が走った場合でも、自然とユーザー操作を邪魔しない（UIスレッドをブロックしない）作りにするという狙いもありました。&lt;/p>
&lt;h3 id="iosでの録画について">iOSでの録画について&lt;/h3>
&lt;p>iOSでのカメラを用いた録画方法については、Qiita等にいくつかの良質な記事が挙がっています。&lt;/p>
&lt;p>ただし、今回の要件として、カメラに映った映像をそのまま録画するのではなく、画面上に表示している地図や速度計等のViewも同時に記録する必要がありました。&lt;/p>
&lt;p>その場合、以下の２通りの録画方法を検討しました。&lt;/p>
&lt;ol>
&lt;li>カメラでキャプチャした映像にViewを合成し記録する&lt;/li>
&lt;li>デバイスに表示されているViewを丸ごと記録する&lt;/li>
&lt;/ol>
&lt;h4 id="1-カメラでキャプチャした映像にviewを合成し記録する">1. カメラでキャプチャした映像にViewを合成し記録する&lt;/h4>
&lt;p>こちらの方法についてまず試したところ、合成すべきViewの内容（地図や速度）が常に変化するものである為、毎フレーム合成し直す必要があり、処理が１フレームの時間内に収まらず、録画ファイルが明らかにコマ落ちしているような品質になってしまい、断念しました。&lt;br>
ただし、こちらの方法ではiOSが備えているカメラの手ぶれ補正機能を使えるという大きなメリットがある為、撮影内容のクオリティを求める場合はこちらの方法をお勧めします。&lt;/p>
&lt;h4 id="2-デバイスに表示されているviewを丸ごと記録する">2. デバイスに表示されているViewを丸ごと記録する&lt;/h4>
&lt;p>こちらは、iOS11から搭載されたスクリーンレコーディングとほぼ同じイメージです。（&lt;a href="https://gori.me/ios/ios11/96712">参考記事&lt;/a>）&lt;/p>
&lt;p>そして、嬉しいことに単純に撮影するだけであれば、&lt;a href="https://developer.apple.com/documentation/replaykit">ReplayKit&lt;/a>という上記のスクリーンレコーディングがアプリ内からできるツールが標準で用意されています。 （&lt;a href="https://qiita.com/akira108/items/babf68a3e7b37f3ca379">参考記事&lt;/a>）&lt;/p>
&lt;p>ただし、上記参考記事のようなシンプルな使い方を行った場合、撮影終了時に &lt;code>RPPreviewController&lt;/code> を呼び出してユーザーに保存またはシェアさせる、といったフローになる（プログラム側で勝手に保存できない）為、ReplayKitで撮影し渡されたbufferを &lt;code>AVAssetWriter&lt;/code> を用いて毎フレーム記録する、という方法を取っています。&lt;/p>
&lt;h3 id="replaykitを使った撮影">ReplayKitを使った撮影&lt;/h3>
&lt;p>これが、様々な要因でクラッシュします・・・&lt;br>
また、クラッシュした際に出てくるメッセージが &lt;code>Error Domain=com.apple.ReplayKit.RPRecordingErrorDomain Code=-5807 &amp;quot;Recording interrupted by multitasking and content resizing&amp;quot;&lt;/code> といったよく分からないものばかりです。&lt;br>
エラーコードっぽいものが出てますが、このコードの詳細についてはAppleのドキュメントに一切記載が無い為、非常に苦労しました・・・&lt;/p>
&lt;h3 id="iosシミュレータが使えない">iOSシミュレータが使えない&lt;/h3>
&lt;p>カメラ機能をフルに使ったアプリである為、シミュレータでの開発がほぼできず、 iPhone X 等の対応を実機でやらざるを得ず、こちらもまた苦労しました・・・&lt;/p>
&lt;h2 id="さいごに">さいごに&lt;/h2>
&lt;p>とりとめのない紹介になってしまいましたが、アプリ内容や開発話等、何かありましたらTwitter等で気軽に呼びかけていただければと思います！&lt;/p></content></item></channel></rss>